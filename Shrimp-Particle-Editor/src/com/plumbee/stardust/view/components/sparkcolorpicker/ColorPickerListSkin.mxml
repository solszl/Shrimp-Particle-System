<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
             xmlns:sparkcolorpicker="com.plumbee.stardust.view.components.sparkcolorpicker.*" alpha.disabled=".5"
             minWidth="24"
             currentStateChange="if (currentState == 'open') prepOpenState()" xmlns:mx="library://ns.adobe.com/flex/mx">

    <fx:Metadata>
    <![CDATA[
        [HostComponent("spark.components.ComboBox")]
        ]]>
    </fx:Metadata>

    <fx:Script fb:purpose="styling">
        <![CDATA[
        import spark.events.IndexChangeEvent;

        static private const contentFill : Array = ["bgFill"];

        override public function get contentItems() : Array
        {
            return contentFill
        };
        override protected function updateDisplayList( unscaledWidth : Number, unscaledHeight : Number ) : void
        {
            if ( getStyle( "borderVisible" ) == false )
            {
                if ( border )
                {
                    border.visible = false;
                }
                if ( background )
                {
                    background.left = background.top = background.right = background.bottom = 0;
                }
                if ( swatchpanel )
                {
                    swatchpanel.left = swatchpanel.top = swatchpanel.right = swatchpanel.bottom = 0;
                }
            }
            else
            {
                if ( border )
                {
                    border.visible = true;
                }
                if ( background )
                {
                    background.left = background.top = background.right = background.bottom = 1;
                }
                if ( swatchpanel )
                {
                    swatchpanel.left = swatchpanel.top = swatchpanel.right = swatchpanel.bottom = 1;
                }
            }
            if ( dropShadow )
            {
                dropShadow.visible = getStyle( "dropShadowVisible" );
            }
            openButton.setStyle( "cornerRadius", getStyle( "cornerRadius" ) );
            if ( borderStroke )
            {
                borderStroke.color = getStyle( "borderColor" );
                borderStroke.alpha = getStyle( "borderAlpha" );
            }
            super.updateDisplayList( unscaledWidth, unscaledHeight );
        }

        private function prepOpenState() : void
        {
            if ( preview )
            {
                previewColor.color = hostComponent.selectedItem as uint;
            }
            ti.callLater( ti.setFocus );
            ti.text = previewColor.color.toString( 16 );
        }

        private function handleEnter() : void
        {
            hostComponent.selectedItem = previewColor.color;
            hostComponent.closeDropDown( true );
            hostComponent.dispatchEvent( new IndexChangeEvent( IndexChangeEvent.CHANGE ) );
        }
        ]]>
    </fx:Script>

    <s:states>
        <mx:State name="normal"/>
        <mx:State name="open"/>
        <mx:State name="disabled"/>
    </s:states>

    <s:PopUpAnchor id="popUp" displayPopUp.normal="false" displayPopUp.open="true" includeIn="open"
                   left="0" right="0" top="0" bottom="0" itemDestructionPolicy="auto"
                   popUpPosition="below" popUpWidthMatchesAnchorWidth="false">

        <sparkcolorpicker:FocusGroup id="dropDown">

            <s:RectangularDropShadow id="dropShadow" blurX="20" blurY="20" alpha="0.45" distance="7"
                                     angle="90" color="#000000" left="0" top="0" right="0" bottom="0"/>

            <s:Rect id="border" left="0" right="0" top="0" bottom="0">
                <s:stroke>
                    <mx:SolidColorStroke id="borderStroke" weight="1"/>
                </s:stroke>
            </s:Rect>

            <s:Rect id="background" left="1" right="1" top="1" bottom="1">
                <s:fill>
                    <mx:SolidColor id="bgFill" color="0xFFFFFF"/>
                </s:fill>
            </s:Rect>
            <s:VGroup id="swatchpanel" left="0" top="0" right="0" bottom="0">
                <s:HGroup paddingLeft="3" paddingTop="3">
                    <s:Rect id="preview" width="50" height="20">
                        <s:fill>
                            <mx:SolidColor id="previewColor"/>
                        </s:fill>
                    </s:Rect>
                    <s:TextInput id="ti" restrict="0123456789abcdefABCDEF"
                                 change="previewColor.color = uint('0x' + ti.text)"
                                 enter="handleEnter()"/>
                </s:HGroup>
                <s:Group>
                    <s:Rect left="0" top="0" right="0" bottom="0" width="220" height="132">
                        <s:fill>
                            <mx:SolidColor color="0x0"/>
                        </s:fill>
                    </s:Rect>
                    <s:DataGroup id="dataGroup" left="0" top="0" right="0" bottom="0" width="220" height="132">
                        <s:layout>
                            <s:TileLayout verticalGap="0" horizontalGap="0" requestedColumnCount="20"
                                          requestedRowCount="12"/>
                        </s:layout>
                        <s:itemRenderer>
                            <fx:Component>
                                <s:ItemRenderer autoDrawBackground="false"
                                                rollOver="outerDocument.previewColor.color = uint(data); outerDocument.ti.text = data.toString(16)">
                                    <s:states>
                                        <mx:State name="normal"/>
                                        <mx:State name="hovered"/>
                                        <mx:State name="selected"/>
                                    </s:states>
                                    <s:Rect id="swatch" width="10" height="10">
                                        <s:fill>
                                            <mx:SolidColor color="{data}"/>
                                        </s:fill>
                                        <s:stroke>
                                            <mx:SolidColorStroke color="0xFFFF00" alpha.hovered="1" alpha="0"/>
                                        </s:stroke>
                                    </s:Rect>
                                </s:ItemRenderer>
                            </fx:Component>
                        </s:itemRenderer>
                    </s:DataGroup>
                </s:Group>
            </s:VGroup>
        </sparkcolorpicker:FocusGroup>
    </s:PopUpAnchor>
    <s:Button id="openButton" left="0" right="0" top="0" bottom="0" focusEnabled="false"
              skinClass="com.plumbee.stardust.view.components.sparkcolorpicker.ColorPickerListButtonSkin"/>

    <s:Rect id="currentColor" left="2" right="2" top="2" bottom="2" width="20" height="20" radiusX="2">
        <s:fill>
            <mx:SolidColor id="current"/>
        </s:fill>
    </s:Rect>

</s:SparkSkin>
