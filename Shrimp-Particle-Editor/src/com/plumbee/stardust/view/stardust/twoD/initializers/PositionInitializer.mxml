<?xml version="1.0"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                xmlns:zones="com.plumbee.stardust.view.stardust.twoD.zones.*">

    <fx:Script><![CDATA[
		import com.plumbee.stardust.helpers.DropdownListVO;
		import com.plumbee.stardust.view.StardusttoolMainView;
		import com.plumbee.stardust.view.events.PositionInitializerEmitterPathEvent;
		import com.plumbee.stardust.view.stardust.twoD.zones.SinglePointZone;
		import com.shrimp.extensions.particle.twoD.initializers.PositionAnimated;
		import com.shrimp.extensions.particle.twoD.zones.SinglePoint;
		
		import spark.events.TextOperationEvent;

        private var storedX : int = 0;
        private var storedY : int = 0;

        override public function set data(d : Object) : void
        {
            super.data = d;
            if (d == null)
            {
                return;
            }
            zc.setData(PositionAnimated(data));
            if (PositionAnimated(data).positions)
            {
                animatedCheckBox.selected = true;
            }
            velocityCheckBox.selected = PositionAnimated(data).inheritVelocity;
        }

        private function animatedCheckBox_changeHandler(event : Event) : void
        {
            if (!animatedCheckBox.selected)
            {
                PositionAnimated(data).positions = null;
            }
        }

        private function velocityCheckBox_changeHandler(event : Event) : void
        {
            PositionAnimated(data).inheritVelocity = velocityCheckBox.selected;
        }

        private function followMouseChangeHandler(event : Event) : void
        {
            const ZoneClass : Class = DropdownListVO(zc.ddl.selectedItem).stardustClass;
            if (event.currentTarget.selected)
            {
                if (ZoneClass == SinglePoint)
                {
                    var content : SinglePointZone = zc.content.getElementAt(0) as SinglePointZone;
                    storedX = parseInt(content.x1.text);
                    storedY = parseInt(content.y1.text);

                    addEventListener(Event.ENTER_FRAME, handleFollowMouse);
                }
            }
            else
            {
                removeEventListener(Event.ENTER_FRAME, handleFollowMouse);
                if (ZoneClass == SinglePoint)
                {
                    content = zc.content.getElementAt(0) as SinglePointZone;
                    content.x1.text = storedX.toString();
                    content.y1.text = storedY.toString();
                    content.x1.dispatchEvent(new TextOperationEvent(TextOperationEvent.CHANGE));
                }
            }
        }

        private function handleFollowMouse(event : Event) : void
        {
            const ZoneClass : Class = DropdownListVO(zc.ddl.selectedItem).stardustClass;
            if (ZoneClass == SinglePoint)
            {
                var content : SinglePointZone = zc.content.getElementAt(0) as SinglePointZone;
                content.x1.text = (stage.mouseX - StardusttoolMainView.leftColumnWidth).toString();
                content.y1.text = (stage.mouseY).toString();
                content.x1.dispatchEvent(new TextOperationEvent(TextOperationEvent.CHANGE));
            }
        }

        private function canFollowMouse(ZoneClass : Class) : Boolean
        {
            if (ZoneClass == SinglePoint)
            {
                return true;
            }
            return false;
        }

        private function dispatchLoadEmitterPath() : void
        {
            dispatchEvent(new PositionInitializerEmitterPathEvent(PositionInitializerEmitterPathEvent.LOAD));
        }
        ]]></fx:Script>

    <s:layout>
        <s:HorizontalLayout verticalAlign="middle"/>
    </s:layout>

    <s:Label text="Position"/>
    <s:VGroup width="100%">
        <zones:ZoneContainer id="zc" width="100%"/>
        <s:CheckBox label="Follow mouse" id="followMouseCheckBox" change="followMouseChangeHandler(event)"
                    enabled="{canFollowMouse(DropdownListVO(zc.ddl.selectedItem).stardustClass)}"/>
        <s:HGroup>
            <s:CheckBox label="animated?" id="animatedCheckBox" change="animatedCheckBox_changeHandler(event)"/>
            <s:Button label="Load emitter path from EmitterPath.swf" enabled="{animatedCheckBox.selected}"
                      click="dispatchLoadEmitterPath()"/>
            <s:CheckBox label="inherit velocity" id="velocityCheckBox" change="velocityCheckBox_changeHandler(event)"
                        enabled="{animatedCheckBox.selected}"/>
        </s:HGroup>
    </s:VGroup>

</s:ItemRenderer>
